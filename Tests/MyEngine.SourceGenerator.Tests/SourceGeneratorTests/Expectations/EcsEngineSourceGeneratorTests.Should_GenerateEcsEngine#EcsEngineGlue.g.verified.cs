//HintName: EcsEngineGlue.g.cs
// <auto-generated />
#nullable enable
#pragma warning disable CS0162 // Unreachable code detected

namespace MyEngine.Runtime
{
    public sealed class EcsEngineGlue : global::MyEngine.Core.Ecs.IEcsEngineGlue
    {
        private global::System.Collections.Generic.ISet<global::MyEngine.Core.Ecs.EntityId> _entities = null!;
        private global::MyEngine.Core.ComponentCollection _components = null!;
        private global::MyEngine.Core.Ecs.Resources.IResourceContainer _resourceContainer = null!;

        public void Init(
            global::System.Collections.Generic.ISet<global::MyEngine.Core.Ecs.EntityId> entities,
            global::MyEngine.Core.ComponentCollection components,
            global::MyEngine.Core.Ecs.Resources.IResourceContainer resourceContainer)
        {
            _entities = entities;
            _components = components;
            _resourceContainer = resourceContainer;
        }

        public global::MyEngine.Core.IAppEntrypoint GetAppEntrypoint() => new global::MyAppEntrypoint();

        public Dictionary<System.Type, Func<global::MyEngine.Core.Ecs.Systems.IStartupSystem?>> GetStartupSystemInstantiations()
        {
            var startupSystemInstantiations = new Dictionary<System.Type, Func<global::MyEngine.Core.Ecs.Systems.IStartupSystem?>>();

            startupSystemInstantiations.Add(typeof(global::MyNamespace.MyStartupSystem), () =>
            {
                if (_resourceContainer.TryGetResource<global::MyNamespace.MyResource>(out var resource1))
                {
                    return new global::MyNamespace.MyStartupSystem(resource1);
                }
                return null;
            });

            return startupSystemInstantiations;
        }


        public Dictionary<System.Type, Func<global::MyEngine.Core.Ecs.Systems.ISystem?>> GetSystemInstantiations()
        {
            var systemInstantiations = new Dictionary<System.Type, Func<global::MyEngine.Core.Ecs.Systems.ISystem?>>();

            systemInstantiations.Add(typeof(global::MyNamespace.MySystem), () =>
            {
                
                if (_resourceContainer.TryGetResource<global::MyNamespace.MyResource>(out var resource0))
                {
                    return new global::MyNamespace.MySystem(
                        resource0);
                }
                return null;
            });
            systemInstantiations.Add(typeof(global::MyEngine.Core.TransformSyncSystem), () =>
            {
                global::MyEngine.Core.Ecs.Components.EntityComponents<global::MyEngine.Core.Ecs.Components.TransformComponent,
                                                                      global::MyEngine.Core.Ecs.Components.OptionalComponent<global::MyEngine.Core.Ecs.Components.ParentComponent>,
                                                                      global::MyEngine.Core.Ecs.Components.OptionalComponent<global::MyEngine.Core.Ecs.Components.ChildrenComponent>>? GetQuery1Components(global::MyEngine.Core.Ecs.EntityId entityId)
                {
                    if (_components.TryGetComponent<global::MyEngine.Core.Ecs.Components.TransformComponent>(entityId, out var component1))
                    {
                        var component2 = _components.GetOptionalComponent<global::MyEngine.Core.Ecs.Components.ParentComponent>(entityId);
                        var component3 = _components.GetOptionalComponent<global::MyEngine.Core.Ecs.Components.ChildrenComponent>(entityId);
                        return new global::MyEngine.Core.Ecs.Components.EntityComponents<global::MyEngine.Core.Ecs.Components.TransformComponent,
                                                                                         global::MyEngine.Core.Ecs.Components.OptionalComponent<global::MyEngine.Core.Ecs.Components.ParentComponent>,
                                                                                         global::MyEngine.Core.Ecs.Components.OptionalComponent<global::MyEngine.Core.Ecs.Components.ChildrenComponent>>(entityId)
                        {
                            Component1 = component1,
                            Component2 = component2,
                            Component3 = component3
                        };
                    }
                    return null;
                }
                if (true)
                {
                    return new global::MyEngine.Core.TransformSyncSystem(
                        global::MyEngine.Core.Ecs.Query.Create(_components, _entities, GetQuery1Components));
                }
                return null;
            });

            return systemInstantiations;
        }

        public IReadOnlyCollection<System.Type> GetAllStartupSystemTypes() =>
            new Type[]
            {
                typeof(global::MyNamespace.MyStartupSystem)
            };

        public IReadOnlyCollection<System.Type> GetAllSystemTypes() =>
            new Type[]
            {
                typeof(global::MyNamespace.MySystem),
                typeof(global::MyEngine.Core.TransformSyncSystem)
            };

        public Dictionary<System.Type, System.Type[]> GetUninstantiatedStartupSystems() =>
            new ()
            {
                { typeof(global::MyNamespace.MyStartupSystem), new Type[] { typeof(global::MyNamespace.MyResource) } }
            };

        public Dictionary<System.Type, System.Type[]> GetUninstantiatedSystems() =>
            new ()
            {
                { typeof(global::MyNamespace.MySystem), new Type[] { typeof(global::MyNamespace.MyResource) } },
                { typeof(global::MyEngine.Core.TransformSyncSystem), new Type[] {  } }
            };
    }
}

#pragma warning restore CS0162 // Unreachable code detected
#nullable restore
